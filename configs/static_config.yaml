components_manager:
    task_processors:                  # Task processor is an executor for coroutine tasks

        main-task-processor:          # Make a task processor for CPU-bound coroutine tasks.
            worker_threads: $worker-threads         # Process tasks in 4 threads.

        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            worker_threads: $worker-fs-threads

        grpc-blocking-task-processor:
            worker_threads: $worker-grpc-threads
            thread_name: grpc-worker

    default_task_processor: main-task-processor

    components:                       # Configuring components that were registered via component_list
        grpc-server:
            port: 8081
            service-defaults:
                middlewares: [ ]
                task-processor: main-task-processor

        grpc-server-configurator:

        server:
            listener:                 # configuring the main listening socket...
                port: $server-port            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: $logger-level
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.

        # Dynamic config options. Cache is disabled, updates are disabled.
        dynamic-config:
            # For most of userver dynamic configs, defaults are used, some are overridden here.
            # See userver "dynamic config" docs for what configs exist.
            defaults:
                HTTP_CLIENT_CONNECTION_POOL_SIZE: 1000

        testsuite-support: {}

        http-client:
            load-enabled: $is_testing
            fs-task-processor: fs-task-processor

        dns-client:
            fs-task-processor: fs-task-processor

        tests-control:
            load-enabled: $is_testing
            path: /tests/{action}
            method: POST
            task_processor: main-task-processor
        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        handler-hello:                    # Finally! Our handler.
            path: /hello                  # Registering handler by URL '/hello'.
            method: GET,POST              # It will only reply to GET (HEAD) and POST requests.
            task_processor: main-task-processor  # Run it on CPU bound task processor

        handler-signin:

        handler-authorize:

        redis-db-1:
            groups:
                - config_name: redis_db_1  # Key to lookup in secdist configuration
                  db: redis_db_1           # Name to refer to the cluster in components::Redis::GetClient()
                  sharding_strategy: RedisCluster

            subscribe_groups:  # Array of redis clusters to work with in subscribe mode

            thread_pools:
                redis_thread_pool_size: 8
                sentinel_thread_pool_size: 1

        secdist: # Component that stores configuration of hosts and passwords
            provider: default-secdist-provider
        default-secdist-provider: # Component that loads configuration of hosts and passwords
            config: $secdist-path  # Values are supposed to be stored in this file
            missing-ok: true                             # ... but if the file is missing it is still ok
            environment-secrets-key: SECDIST_CONFIG      # ... values will be loaded from this environment value
